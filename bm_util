#!/usr/bin/python


# -------------------------------
# ridiculously simple bookmarking
# -------------------------------

# bm         - show a list of all bookmarks
# bm a       - add current folder to list of bookmarks
# bm id	     - cd to folder with id=id
# bm d id    - delete folder with id=id from bookmark list
# bm c       - clear all dead bookmarks
# bm r       - renumber all bookmark ids
# bm f str   - find string str in all bookmark paths and cd to it
# bm s (id|name|hits|time) - sort the table by column

if __name__ == "main":
    pass

# Interface functions
def bm():
    pass


def bm_a():
    pass


def bm_id(id=id):
    pass


def bm_d_id(id=id):
    pass


def bm_c():
    pass


def bm_r():
    pass


def bm_f_str():
    pass


def bm_s():
    pass


# Internal functions
def open_database():
    pass


def print_complete_table(sort="id"):
    pass


def change_directory(path="/home"):
    pass


def is_path_valid(path="/home"):
    pass



# Cursor row parsers (return strings)
def get_str_id(cursor="c"):
    pass

def get_str_name(cursor="c"):
    pass

def get_str_path(cursor="c"):
    pass

def get_str_hits(cursor="c"):
    pass

def get_str_time(cursor="c"):
    pass


# sqlite functions (returns cursors)
def get_cur_all_rows():
    pass


def get_cur_row(id=1):
    pass


def get_cur_row_find(str="str"):
    pass



# sqlite functions (return 1 = success or 0 = failure)
def del_row(id=1):
    pass
